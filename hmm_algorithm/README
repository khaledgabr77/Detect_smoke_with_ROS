This is HMM Model , Train and Inference in the same file but seperate in two functions

Two States : Smoky (RED) and Normal(GREEN)

the code plots the graph : Number of clusters against the State

There is a log file is an input to the model despite of it's just a sample from the original logfile 



------------------------------
install hmmlearn
pip install --upgrade --user hmmlearn
pip install seaborn

run: python2 hmm_train.py

Note that python version 2.7.12 : which works with ROS
_______________________________________________________

Next:

1) Real logfile input to the training model

2) convert to a ros node and the input is a sequence from the subscribed topic /clusters_num




import rospy
from std_msgs.msg import String
from std_msgs.msg import Int16

   pub = rospy.Publisher("/int_data", Int16, queue_size =10)
   sub = rospy.Subscriber("/clusters_num", String, callback)
   rospy.init_node("HMM_model")
   
   rate = rospy.Rate(2) 

   while not rospy.is_shutdown():
   if Clusters => 7:
      rospy.loginfo("you are in smoke area! %s", Clusters)
   pub.pulish(Clusters)
   else:
      rospy.loginfo("you are not in smoke area! %s", Clusters)
      pub.pulish(Clusters)

